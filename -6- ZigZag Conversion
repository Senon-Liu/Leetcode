public class Solution {
    public String convert(String s, int nRows) {
    int length = s.length();
        if (length <= nRows || nRows == 1) return s;
        char[] chars = new char[length];
        int step = 2 * (nRows - 1);
        int count = 0;
	    for (int i = 0; i < nRows; i++){
    		int interval = step - 2 * i;
    		for (int j = i; j < length; j += step){
    		   	chars[count] = s.charAt(j);
    			count++;
    			if (interval < step && interval > 0 
    && j + interval < length && count <  length){
    				chars[count] = s.charAt(j + interval);
    				count++;
    			}
    		}
    	}
        return new String(chars);
    }
    
    
    
    
    
    /*** confused for the TLE problem ***/
    /*
            char[][] result=new char[nRows][s.length()];
	        if(nRows==1){
	            return s;
	        }
	        int i=0;
	        int j=0;
	        boolean flag=true;
	        for(int k=0;k<s.length();k++){
	            result[i][j]=s.charAt(k);
	            if(flag){
	                i++;
	            }
	            else{
	                j++;
	                i--;
	            }    
	            
	            if(i==nRows-1){
	                flag=false;
	            }
	            else if(i==0){
	                flag=true;
	            }
	        }
	        
	        StringBuilder sb=new StringBuilder();
	        for(int a=0;a<nRows;a++){
	            for(int b=0;b<s.length();b++){
	                if(result[a][b]!=' '){
	                    sb.append(result[a][b]);
	                }
	            }
	        }
	        String res=sb.toString();
	        return res;
	        */
    }
}





redo:
public class Solution {
    public String convert(String s, int nRows) {
        if(s == null) return null;
        if(nRows == 1) return s;
        int interval = (nRows-1) << 1;
        int len = s.length();
        StringBuilder sb = new StringBuilder();
        for(int i = 0;i < nRows;i++){
            for(int j = i;j < len;j += interval){
                char c = s.charAt(j);
                sb.append(c);
                int mid = j + interval - 2 * i;
                if(i != 0 && i < nRows - 1 && mid < len){
                    sb.append(s.charAt(mid));
                }
            }
        }
        return sb.toString();
    }
}
