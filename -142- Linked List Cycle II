/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        /*
        ListNode s=head;
        ListNode f=head;
        while(f!=null&&f.next!=null){
            s=s.next;
            f=f.next.next;
            if(s==f){
                if(s==head){
                    return s.next;
                }
                return s.next;
            }
        }
        return null;
        */
        if(head==null){
            return null;
        }
        ListNode f;
        ListNode s;
        s=f=head;
        do{
            if(f.next==null||f.next.next==null){
                return null;
            }
            f=f.next.next;
            s=s.next;
        }while(s!=f);
        
        while(head!=s){
            head=head.next;
            s=s.next;
        }
        
        return head;
    }
}
