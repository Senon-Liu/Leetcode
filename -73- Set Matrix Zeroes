/*** cc150-1.7 ***/

public class Solution {
    public void setZeroes(int[][] matrix) {
        boolean[] col= new boolean[matrix[0].length];
        boolean[] row=new boolean[matrix.length];
        // Store the row and column index with value 0 
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length;j++) { 
                if (matrix[i][j] == 0) {
                    row[i] = true;
                    col[j] = true; 
                }
            } 
        }
        // Set arr[i][j] to 0 if either row i or column j has a 0 
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) { 
                if ((row[i] == true || col[j] == true)) {
                    matrix[i][j] = 0; 
                }
            }
        }
    }
}


redo:
public class Solution {
    public void setZeroes(int[][] matrix) {
        if(matrix.length==0||matrix[0].length==0) return;
        
        int col=matrix[0].length;
        int row=matrix.length;
        
        boolean[] cM=new boolean[col];
        boolean[] rM=new boolean[row];
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(matrix[i][j]==0){
                    cM[j]=true;
                    rM[i]=true;
                }
            }
        }
        
        for(int i=0;i<row;i++){
            if(rM[i]) nullRow(matrix, i);
        }
        
        for(int i=0;i<col;i++){
            if(cM[i]) nullCol(matrix, i);
        }
    }
    
    public void nullRow(int[][] matrix, int row){
        for(int i=0;i<matrix[0].length;i++){
            matrix[row][i]=0;
        }
    }
    
    public void nullCol(int[][] matrix, int col){
        for(int i=0;i<matrix.length;i++){
            matrix[i][col]=0;
        }
    }
}
