public class Solution {
    public int strStr(String haystack, String needle) {
        if (haystack == null){
            return -1;
        }
        if (needle.length() == 0){
                return 0;
        }

        int length1 = haystack.length();
        int length2 = needle.length();

        for (int i = 0; i < length1 - length2 + 1; i++){
            if (haystack.substring(i, i + length2).equals(needle)){
                return i;
            }
        }

        return -1;
    }
}

public int strStr(String haystack, String needle) {
for (int i = 0; ; i++) {
for (int j = 0; ; j++) {
if (j == needle.length()) return i;
if (i + j == haystack.length()) return -1;
if (needle.charAt(j) != haystack.charAt(i + j)) break;
}
}
}



redo:
public class Solution {
    public int strStr(String haystack, String needle) {
        if(!haystack.contains(needle)) return -1;
        return haystack.indexOf(needle);
    }
}


public class Solution {
    public int strStr(String haystack, String needle) {
        // if(haystack == null || needle == null) return -1;
        // int len1 = haystack.length();
        // int len2 = needle.length();
        // for(int i = 0;i <= len1 - len2;i++){
        //     int j = 0;
        //     for(;j < len2;j++){
        //         if(haystack.charAt(i + j) != needle.charAt(j)){
        //             break;
        //         }
        //         if(j == len2 - 1){
        //             return i;
        //         }
        //     }
        // }
        // return -1;
        if(haystack == null ||needle == null) return -1;
        int len1 = haystack.length();
        int len2 = needle.length();
        if(len1 < len2) return -1;
        else if(len2 == 0) return 0;
        for(int i = 0;i <= len1 - len2;i++){
            if(haystack.substring(i, i+len2).equals(needle)){
                return i;
            }
        }
        return -1;
    }
}
