public class Solution {
    public void rotate(int[][] matrix) {
         if (matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return;
        }

        int length = matrix.length;

        for (int i = 0; i < length / 2; i++) {
            for (int j = 0; j < (length + 1) / 2; j++){
                int tmp = matrix[i][j];
                matrix[i][j] = matrix[length - j - 1][i];
                matrix[length -j - 1][i] = matrix[length - i - 1][length - j - 1];
                matrix[length - i - 1][length - j - 1] = matrix[j][length - i - 1];
                matrix[j][length - i - 1] = tmp;
            }
        }
    }
}



redo:
public class Solution {
    public void rotate(int[][] matrix) {
        if(matrix==null||matrix[0].length==0||matrix.length==0){
            return;
        }

        int n=matrix.length;
        int top=0, down=n-1, left=0, right=n-1;
        
        while(n>1){
            for(int i=0;i<n-1;i++){
                int tmp=matrix[top][left+i];
                //top=left
                matrix[top][left+i]=matrix[down-i][left];
                //left=down
                matrix[down-i][left]=matrix[down][right-i];
                //down=right
                matrix[down][right-i]=matrix[top+i][right];
                //right=top
                matrix[top+i][right]=tmp;
            }
            top++;
            left++;
            right--;
            down--;
            n-=2;
        }
        
    }
}
