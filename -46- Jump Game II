public class Solution {
    public int jump(int[] A) {
        int[] steps = new int[A.length];
        
        steps[0] = 0;
        for (int i = 1; i < A.length; i++) {
            steps[i] = Integer.MAX_VALUE;
            for (int j = 0; j < i; j++) {
                if (steps[j] != Integer.MAX_VALUE && j + A[j] >= i) {
                    steps[i] = steps[j] + 1;
                    break;
                }
            }
        }
        
        return steps[A.length - 1];
    }
}




redo:
public class Solution {
    public int jump(int[] A) {
        if(A==null) return 0;
        int len=A.length;
        int start=0;
        int end=0;
        int step=0;
        while(end<len-1){
            int max=0;
            step++;
            for(int i=start;i<=end;i++){
                max=Math.max(A[i]+i, max);
                if(max>=len-1){
                    return step;
                }
            }
            start=end+1;
            end=max;
            if(start>max){
                break;
            }
        }
        return 0;
    }
}
