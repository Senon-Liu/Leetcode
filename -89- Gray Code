public class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> ret= new ArrayList<Integer>();
        int size=1<<n;
        for(int i=0;i<size;i++){
            ret.add(i^(i>>1));
        }
        return ret;
    }
}

public class Solution {    
    public ArrayList<Integer> grayCode(int n) {    
        if(n==0) {    
            ArrayList<Integer> result = new ArrayList<Integer>();    
            result.add(0);    
            return result;    
        }    
            
        ArrayList<Integer> tmp = grayCode(n-1);    
        int addNumber = 1 << (n-1);    
        ArrayList<Integer> result = new ArrayList<Integer>(tmp);    
        for(int i=tmp.size()-1;i>=0;i--) {    
            result.add(addNumber + tmp.get(i));    
        }    
        return result;    
    }    
}    



redo:
public class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> ret = new ArrayList<Integer>();
        if(n == 0){
            ret.add(0);
            return ret;
        }
        
        ret = grayCode(n - 1);
        
        for(int i = ret.size() - 1;i >= 0;i--){
            int num = ret.get(i);
            num += 1<< (n - 1);
            ret.add(num);
        }
        return ret;
    }
}
