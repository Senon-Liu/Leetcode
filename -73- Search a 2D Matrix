public class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
        int rows = matrix.length;
        int cols = matrix[0].length;
        int start = 0;
        int end = rows * cols - 1;
        while (start <= end) {
            int mid = (start + end) / 2;
            // Tricks to treat it as a 1-D array
            int digit = matrix[mid / cols][mid % cols];
            if (target == digit) {
                return true;
            } else if (target > digit) {
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }
        return false;
        
        
        /*
        int temp=0;
        for(int i=0;i<matrix.length;i++){
            if(target<matrix[i][0]&&i==0){
                return false;
            }else if(target<matrix[i][0]){
                temp=i-1;
                break;
            }else{
                ;
            }
        }
        int l=0;
        int r=matrix[temp].length;
        while(l+1<r){
            int mid=l+(r-l)/2;
            if(target==matrix[temp][mid]){
                return true;
            }else if(target>matrix[temp][mid]){
                l=mid;
            }else{
                r=mid;
            }
        }
        return false;
        */
    }
}
