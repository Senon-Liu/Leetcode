/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    private ListNode current;
    public TreeNode sortedListToBST(ListNode head) {
        if(head==null) return null;
        
        int size=getListLength(head);
        current=head;
        return recLtoB(size);
    }
    
    public int getListLength(ListNode head){
        int length=0;
        while(head!=null){
            length++;
            head=head.next;
        }
        return length;
    }
    
    public TreeNode recLtoB(int size){
        if(size<=0) return null;
        
        TreeNode lnode=recLtoB(size/2);
        TreeNode root=new TreeNode(current.val);
        current=current.next;
        TreeNode rnode=recLtoB(size-1-size/2);
        
        root.left=lnode;
        root.right=rnode;
        
        return root;
    }
}
