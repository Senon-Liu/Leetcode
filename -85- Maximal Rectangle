public class Solution {
    public int maximalRectangle(char[][] matrix) {
        if(matrix==null||matrix.length==0||matrix[0].length==0){
            return 0;
        }
        int maxarea=0;
        
        int row=matrix.length;
        int col=matrix[0].length;
        int[][] h=new int[row][col];
        
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(matrix[i][j]=='0'){
                    h[i][j]=0;
                }else{
                    if(i==0){
                        h[i][j]=1;
                    }else{
                        h[i][j]=h[i-1][j]+1;
                    }
                }
                
                if(j==col-1){
                    int maxrec=maxArea(h[i]); 
                    maxarea=Math.max(maxrec, maxarea);
                }
            }
        }
        
        return maxarea;
    }
    
    public int maxArea(int[] h){
        int max=0;
        int i=0;
        Stack<Integer> s=new Stack<Integer>();
        
        while(i<=h.length){
            if(s.isEmpty()||i<h.length&&h[i]>=h[s.peek()]){
                s.push(i);
                i++;
            }else{
                int height=h[s.pop()];
                int width=s.isEmpty()? i: i-s.peek()-1;
                max=Math.max(max, height*width);
            }
        }
        return max;
    }
}
