public class Solution {
    public int removeDuplicates(int[] A) {
        int n=A.length;
        if(n == 0) return n;
        int shift = 0;
        int lastNum = A[0];
        for(int i = 1; i < n; i++){
            if(lastNum == A[i])
                shift++;
            else{
                lastNum = A[i];
                if(shift!=0) A[i-shift] = A[i];
            }
        }
        return n-shift;
    }
}

redo:
public class Solution {
    public int removeDuplicates(int[] A) {
        int count=0;
        for(int i=1;i<A.length;i++){
            if(A[i-1]==A[i]) count++;
            A[i-count]=A[i];
        }
        return A.length-count;
    }
}

public class Solution {
    public int removeDuplicates(int[] A) {
        if(A.length<2) return A.length;
        int start=1;
        for(int i=1;i<A.length;i++){
            if(A[i]!=A[i-1]){
                A[start++]=A[i];
            }
        }
        return start;
    }
}
