/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if(root==null) return;
        
        // TreeLinkNode leftEnd=root;
        // while(leftEnd!=null&&leftEnd.left!=null){
        //     TreeLinkNode cur=leftEnd;
        //     while(cur!=null){
        //         if(cur.left!=null){
        //             cur.left.next=cur.right;
        //             cur.right.next=cur.next==null?null:cur.next.left;
        //             cur=cur.next;
        //         }else{
        //             cur.right.next=cur.next==null?null:cur.next.left;
        //             cur=cur.next;
        //         }
        //     }
        //     leftEnd=leftEnd.left;
        // }
        
        TreeLinkNode lastHead=root;
        TreeLinkNode pre=null;
        TreeLinkNode curHead=null;
        
        while(lastHead!=null){
            TreeLinkNode lastCur=lastHead;
            while(lastCur!=null){
                if(lastCur.left!=null){
                    if(curHead==null){
                        curHead=lastCur.left;
                        pre=curHead;
                    }else{
                        pre.next=lastCur.left;
                        pre=pre.next;
                    }
                }
                if(lastCur.right!=null){
                    if(curHead==null){
                        curHead=lastCur.right;
                        pre=curHead;
                    }else{
                        pre.next=lastCur.right;
                        pre=pre.next;
                    }
                }
                lastCur=lastCur.next;
            }
            lastHead=curHead;
            curHead=null;
        }
    }
}
